{"version":3,"sources":["webpack:///src/src/App.vue","app.aa42754a.css","webpack:///src/views/src/views/Translator.vue","webpack:///src/views/src/views/YodaSpeak.vue","webpack:///src/views/src/views/DothrakiSpeak.vue","webpack:///src/views/src/views/PirateSpeak.vue","webpack:///src/views/src/views/ShakespeareSpeak.vue","webpack:///src/views/src/views/VulcanSpeak.vue","webpack:///src/views/src/views/Speaker.vue"],"names":[],"mappings":"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","file":"app.aa42754a.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1> <a href=\"\">Derek's Galactic Translator</a></h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n\n.translator[data-v-38ffb4b8] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-38ffb4b8]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-38ffb4b8]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-38ffb4b8], h2[data-v-38ffb4b8] {\n  font-weight: normal;\n}\nul.results[data-v-38ffb4b8] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-38ffb4b8] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-38ffb4b8] {\n  color: #42b983;\n}\n\n\n.yodaspeak[data-v-1fe25e4f] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-1fe25e4f]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-1fe25e4f]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-1fe25e4f], h2[data-v-1fe25e4f] {\n  font-weight: normal;\n}\nul.results[data-v-1fe25e4f] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-1fe25e4f] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-1fe25e4f] {\n  color: #42b983;\n}\n\n\n.dothrakispeak[data-v-e8bd923a] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-e8bd923a]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-e8bd923a]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-e8bd923a], h2[data-v-e8bd923a] {\n  font-weight: normal;\n}\nul.results[data-v-e8bd923a] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-e8bd923a] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-e8bd923a] {\n  color: #42b983;\n}\n\n\n.piratespeak[data-v-7381c4b2] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-7381c4b2]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-7381c4b2]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-7381c4b2], h2[data-v-7381c4b2] {\n  font-weight: normal;\n}\nul.results[data-v-7381c4b2] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-7381c4b2] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-7381c4b2] {\n  color: #42b983;\n}\n\n\n.shakespearespeak[data-v-69688dc2] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-69688dc2]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-69688dc2]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-69688dc2], h2[data-v-69688dc2] {\n  font-weight: normal;\n}\nul.results[data-v-69688dc2] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-69688dc2] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-69688dc2] {\n  color: #42b983;\n}\n\n\n.vulcanspeak[data-v-4defc6d8] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-4defc6d8]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-4defc6d8]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-4defc6d8], h2[data-v-4defc6d8] {\n  font-weight: normal;\n}\nul.results[data-v-4defc6d8] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-4defc6d8] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\na[data-v-4defc6d8] {\n  color: #42b983;\n}\n\n\n.yodaspeak[data-v-60cfc4f8] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-60cfc4f8] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-60cfc4f8] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-60cfc4f8],\nh2[data-v-60cfc4f8] {\n  font-weight: normal;\n}\nul.results[data-v-60cfc4f8] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-60cfc4f8] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-60cfc4f8] {\n  color: #42b983;\n}\n\n\n/*# sourceMappingURL=app.aa42754a.css.map*/","<template>\n\n  <div class=\"translator\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link to='/speaker/yoda'>Yoda</router-link><br>\n      <router-link to='/speaker/pirate'>Pirate</router-link><br>\n      <router-link to='/speaker/dothraki'>Dothraki</router-link><br>\n      <router-link to='/speaker/shakespeare'>Shakespeare</router-link><br>\n      <router-link to='/speaker/vulcan'>Vulcan</router-link><br>\n    </p>\n\n    <!-- <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Yodaspeak <input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form> -->\n\n    <!-- <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'translator',\n  data () {\n    return {\n      selected: null,\n      options: [\n          {id: 'dothrakispeak'},\n          {id: 'piratespeak'},\n          {id: 'shakespearespeak'},\n          {id: 'vulcanspeak'},\n          {id: 'yodaspeak'}\n      ]\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"May The Force Be With You\")\n      axios.get('https://api.funtranslations.com/translate/yoda.json',{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.translator {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>\n","<template>\n\n  <div class=\"yodaspeak\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Derek's Translator</router-link><br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n      <router-link to=\"'/speaker/yoda'\">Speak</router-link><br>\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Yodaspeak <input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form>\n\n    <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Yodaspeak',\n  data () {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"yoda\",\n      results: null,\n      errors: []\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"May The Force Be With You\")\n      axios.get(`https://api.funtranslations.com/translate/${this.translation}.json`,{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.yodaspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <div class=\"dothrakispeak\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n      \n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Dothraki<input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form>\n\n    <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Dothrakispeak',\n  data () {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"dothraki\",\n      results: null,\n      errors: []\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"Have you seen my horse?\")\n      axios.get(`https://api.funtranslations.com/translate/${this.translation}.json`,{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.dothrakispeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"piratespeak\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Pirate Speak <input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form>\n\n    <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Piratespeak',\n  data () {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"pirate\",\n      results: null,\n      errors: []\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"Why is the rum gone?\")\n      axios.get(`https://api.funtranslations.com/translate/${this.translation}.json`,{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.piratespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"shakespearespeak\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Shakespeare English<input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form>\n\n    <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Shakespearespeak',\n  data () {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"shakespeare\",\n      results: null,\n      errors: []\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"To be or not to be!\")\n      axios.get(`https://api.funtranslations.com/translate/${this.translation}.json`,{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.shakespearespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"vulcanspeak\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Vulcan Speak</router-link><br>\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Vulcan<input type=\"text\" v-model=\"text\"><button type=\"submit\">Translate</button></p>\n    </form>\n\n    <div v-if= \"results && results.contents\"><p>{{results.contents.translated}}</p></div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Vulcanspeak',\n  data () {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"vulcan\",\n      results: null,\n      errors: []\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"Live long and prosper\")\n      axios.get(`https://api.funtranslations.com/translate/${this.translation}.json`,{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.vulcanspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"speaker\">\n    <h2>Let's talk like {{translation}}</h2>\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link>\n      <br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link>\n      <br>\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>\n        Type your text below to convert to {{translation}}\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n \n    <figure>\n        <img :src=\"'./assets/' + translation + '.jpg'\" :alt=\"translation\" srcset=\"\">\n    </figure>\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"speaker\",\n  props: [\"translator\"],\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      results: null,\n      errors: [],\n      translation: null,\n      images: {\n          yoda: 'yoda.jpg'\n      }\n    };\n  },\n\n  created: function() {\n    this.translation = this.$route.params.translator;\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"May The Force Be With You\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.yodaspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>"]}