{"version":3,"sources":["webpack:///src/src/App.vue","app.07f39873.css","webpack:///src/views/src/views/Translator.vue","webpack:///src/views/src/views/YodaSpeak.vue","webpack:///src/views/src/views/DothrakiSpeak.vue","webpack:///src/views/src/views/PirateSpeak.vue","webpack:///src/views/src/views/ShakespeareSpeak.vue","webpack:///src/views/src/views/VulcanSpeak.vue","webpack:///src/views/src/views/Speaker.vue","webpack:///src/src/AboutDerek.vue","webpack:///src/src/AboutProject.vue"],"names":[],"mappings":"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","file":"app.07f39873.css","sourcesContent":["<template>\n  <div id=\"app\">\n\n    <div id=\"nav\">\n      <nav-bar></nav-bar>\n    </div>\n    \n    <h1> <a href=\"\">Derek's Galactic Translator</a></h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/views/NavBar\";\n\nexport default {\n  name: 'app',\n\n  components: {\n    \"nav-bar\": NavBar\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n\n.translator[data-v-f2c91598] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-f2c91598]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-f2c91598]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-f2c91598], h2[data-v-f2c91598] {\n  font-weight: normal;\n}\n\n\n.yodaspeak[data-v-02cebc8a] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-02cebc8a] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-02cebc8a] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-02cebc8a],\nh2[data-v-02cebc8a] {\n  font-weight: normal;\n}\nul.results[data-v-02cebc8a] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-02cebc8a] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-02cebc8a] {\n  color: #42b983;\n}\n\n\n.dothrakispeak[data-v-a6fd1578] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-a6fd1578] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-a6fd1578] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-a6fd1578],\nh2[data-v-a6fd1578] {\n  font-weight: normal;\n}\nul.results[data-v-a6fd1578] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-a6fd1578] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-a6fd1578] {\n  color: #42b983;\n}\n\n\n.piratespeak[data-v-6407e28b] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-6407e28b] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-6407e28b] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-6407e28b],\nh2[data-v-6407e28b] {\n  font-weight: normal;\n}\nul.results[data-v-6407e28b] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-6407e28b] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-6407e28b] {\n  color: #42b983;\n}\n\n\n.shakespearespeak[data-v-2a4de6d5] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-2a4de6d5] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-2a4de6d5] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-2a4de6d5],\nh2[data-v-2a4de6d5] {\n  font-weight: normal;\n}\nul.results[data-v-2a4de6d5] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-2a4de6d5] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-2a4de6d5] {\n  color: #42b983;\n}\n\n\n.vulcanspeak[data-v-018ef95f] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-018ef95f] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-018ef95f] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-018ef95f],\nh2[data-v-018ef95f] {\n  font-weight: normal;\n}\nul.results[data-v-018ef95f] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-018ef95f] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-018ef95f] {\n  color: #42b983;\n}\n\n\n.speaker[data-v-271ba556] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-271ba556] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-271ba556] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-271ba556],\nh2[data-v-271ba556] {\n  font-weight: normal;\n}\nul.results[data-v-271ba556] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-271ba556] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-271ba556] {\n  color: #42b983;\n}\n\n\nh1[data-v-23b6c290], h2[data-v-23b6c290] {\n  font-weight: normal;\n}\np[data-v-23b6c290] {\n  font-size: 2em;\n  text-align: center;\n}\n\n\nh1[data-v-13d0264e], h2[data-v-13d0264e] {\n  font-weight: normal;\n}\np[data-v-13d0264e] {\n  font-size: 2em;\n  text-align: center;\n}\n\n\n/*# sourceMappingURL=app.07f39873.css.map*/","<template>\n\n  <div class=\"translator\">\n    <!-- added router links -->\n    <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br> -->\n      <router-link to='/speaker/yoda'>Yoda</router-link><br>\n      <router-link to='/speaker/pirate'>Pirate</router-link><br>\n      <router-link to='/speaker/dothraki'>Dothraki</router-link><br>\n      <router-link to='/speaker/shakespeare'>Shakespeare</router-link><br>\n      <router-link to='/speaker/vulcan'>Vulcan</router-link><br>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'translator',\n  data () {\n    return {\n      selected: null,\n      options: [\n          {id: 'dothrakispeak'},\n          {id: 'piratespeak'},\n          {id: 'shakespearespeak'},\n          {id: 'vulcanspeak'},\n          {id: 'yodaspeak'}\n      ]\n    }\n  },\n\n  methods: {\n    translate: function(){\n      console.log(\"May The Force Be With You\")\n      axios.get('https://api.funtranslations.com/translate/',{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.translator {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n</style>\n","<template>\n\n  <div class=\"yodaspeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'translator'\">Derek's Translator</router-link><br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Yodaspeak\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Yodaspeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"yoda\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"May The Force Be With You\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.yodaspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <div class=\"dothrakispeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Dothraki\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Dothrakispeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"dothraki\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Have you seen my horse?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.dothrakispeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"piratespeak\">\n\n    <!-- <p> -->\n      <!-- <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Pirate Speak\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Piratespeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"pirate\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Why is the rum gone?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.piratespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"shakespearespeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Shakespeare\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Shakespearespeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"shakespeare\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"To be or not to be!\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.shakespearespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"vulcanspeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'translator'\">Derek's Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n    \n    <form v-on:submit.prevent=\"translate\">\n      <p>\n        Type your text below to convert to Vulcan\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Vulcanspeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"vulcan\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Live long and prosper\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.vulcanspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"speaker\">\n    <h2>Let's talk like {{translation}}</h2>\n    <p>\n      <!-- <router-link v-bind:to=\"'translator'\">Translator</router-link> -->\n      <!-- <br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link>\n      <br> -->\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>\n        Type your text below to convert to {{translation}}\n        <input type=\"text\" v-model=\"text\">\n        <button class=\"btn btn-primary\" type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n \n    <!-- <figure>\n        <img :src=\"buildSpeakerURL()\" :alt=\"buildAltTag()\">\n    </figure> -->\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"speaker\",\n  props: [\"translator\"],\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      results: null,\n      errors: [],\n      translation: null,\n      images: {\n          yoda: 'yoda.jpg'\n      }\n    };\n  },\n\n  created: function() {\n    this.translation = this.$route.params.translator;\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Who am I speaking with?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n      // buildSpeakerURL() {\n      //   returnrequire(`../assets/${this.translation}.jpg`);\n      // };\n      // buildAltTag() {\n      //   return `Logo of ${this.translation}`;\n      // };\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.speaker {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div>\n      <h1>About Me</h1>\n      <h2>{{ msg }}</h2>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'about-derek',\n}\n</script>\n\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\np {\n  font-size: 2em;\n  text-align: center;\n}\n</style>\n\n\n\n","<template>\n  <div>\n      <h1>About Project</h1>\n      <h2>{{ msg }}</h2>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'about-project',\n};\n</script>\n\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\np {\n  font-size: 2em;\n  text-align: center;\n}\n</style>"]}