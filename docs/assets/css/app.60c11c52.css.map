{"version":3,"sources":["webpack:///src/src/App.vue","app.60c11c52.css","webpack:///src/views/src/views/Translator.vue","webpack:///src/views/src/views/YodaSpeak.vue","webpack:///src/views/src/views/DothrakiSpeak.vue","webpack:///src/views/src/views/PirateSpeak.vue","webpack:///src/views/src/views/ShakespeareSpeak.vue","webpack:///src/views/src/views/VulcanSpeak.vue","webpack:///src/views/src/views/Speaker.vue","webpack:///src/src/AboutMe.vue","webpack:///src/src/AboutProject.vue"],"names":[],"mappings":"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","file":"app.60c11c52.css","sourcesContent":["<template>\n  <div id=\"app\">\n\n    <div id=\"nav\">\n      <nav-bar></nav-bar>\n    </div>\n    \n    <h1> <a href=\"\">Derek's Galactic Translator</a></h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/views/NavBar\";\n\nexport default {\n  name: 'app',\n\n  components: {\n    \"nav-bar\": NavBar\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  background-color: #ebd5b3;\n  background-image: url(\"https://www.transparenttextures.com/patterns/natural-paper.png\");\n/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */\n}\na:link {\n  text-decoration: none;\n}\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  background-color: #ebd5b3;\n  background-image: url(\"https://www.transparenttextures.com/patterns/natural-paper.png\");\n/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */\n}\na:link {\n  text-decoration: none;\n}\n\n\n.translator[data-v-4e51f56c] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-4e51f56c]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-4e51f56c]{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-4e51f56c], h2[data-v-4e51f56c] {\n  font-weight: normal;\n}\na[data-v-4e51f56c]:link {\n  text-decoration: none;\n  color: black;\n  padding: 0.5px;\n  text-transform: uppercase;\n}\na[data-v-4e51f56c]:hover {\n  cursor: pointer;\n}\n\n\n.yodaspeak[data-v-02cebc8a] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-02cebc8a] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-02cebc8a] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-02cebc8a],\nh2[data-v-02cebc8a] {\n  font-weight: normal;\n}\nul.results[data-v-02cebc8a] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-02cebc8a] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-02cebc8a] {\n  color: #42b983;\n}\n\n\n.dothrakispeak[data-v-a6fd1578] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-a6fd1578] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-a6fd1578] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-a6fd1578],\nh2[data-v-a6fd1578] {\n  font-weight: normal;\n}\nul.results[data-v-a6fd1578] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-a6fd1578] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-a6fd1578] {\n  color: #42b983;\n}\n\n\n.piratespeak[data-v-6407e28b] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-6407e28b] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-6407e28b] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-6407e28b],\nh2[data-v-6407e28b] {\n  font-weight: normal;\n}\nul.results[data-v-6407e28b] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-6407e28b] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-6407e28b] {\n  color: #42b983;\n}\n\n\n.shakespearespeak[data-v-2a4de6d5] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-2a4de6d5] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-2a4de6d5] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-2a4de6d5],\nh2[data-v-2a4de6d5] {\n  font-weight: normal;\n}\nul.results[data-v-2a4de6d5] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-2a4de6d5] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-2a4de6d5] {\n  color: #42b983;\n}\n\n\n.vulcanspeak[data-v-018ef95f] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-018ef95f] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-018ef95f] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-018ef95f],\nh2[data-v-018ef95f] {\n  font-weight: normal;\n}\nul.results[data-v-018ef95f] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-018ef95f] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-018ef95f] {\n  color: #42b983;\n}\n\n\n.speaker[data-v-5a30fdf2] {\n  font-size: 1.4rem;\n}\ninput[type=\"text\"][data-v-5a30fdf2] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton[data-v-5a30fdf2] {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1[data-v-5a30fdf2],\nh2[data-v-5a30fdf2] {\n  font-weight: normal;\n}\nul.results[data-v-5a30fdf2] {\n  list-style-type: none;\n  padding: 0;\n}\n.results li[data-v-5a30fdf2] {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\na[data-v-5a30fdf2] {\n  color: #42b983;\n}\n\n\nh1[data-v-5d72aaf4],{\n  font-weight: normal;\n}\np[data-v-5d72aaf4] {\n  font-size: 16px;\n  text-align: center;\n  display: block\n}\n\n\nh1[data-v-067ec58b], {\n  font-weight: normal;\n}\np[data-v-067ec58b] {\n  font-size: 16px;\n  text-align: center;\n  display: block\n}\n\n\n/*# sourceMappingURL=app.60c11c52.css.map*/","<template>\n\n  <div class=\"translator\">\n    <!-- added router links -->\n    <p>\n      <!-- <router-link v-bind:to=\"'/'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br> -->\n      <router-link to='/speaker/yoda'>Yoda</router-link><br>\n      <router-link to='/speaker/pirate'>Pirate</router-link><br>\n      <router-link to='/speaker/dothraki'>Dothraki</router-link><br>\n      <router-link to='/speaker/shakespeare'>Shakespeare</router-link><br>\n      <router-link to='/speaker/vulcan'>Vulcan</router-link><br>\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'translator',\n  data () {\n    return {\n      selected: null,\n      options: [\n          {id: 'dothrakispeak'},\n          {id: 'piratespeak'},\n          {id: 'shakespearespeak'},\n          {id: 'vulcanspeak'},\n          {id: 'yodaspeak'}\n      ]\n    }\n  },\n\n  methods: {\n    translate: function(){\n      axios.get('https://api.funtranslations.com/translate/',{\n        params: {\n          text: this.text\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n        console.log(this.results)\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.translator {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\na:link {\n  text-decoration: none;\n  color: black;\n  padding: 0.5px;\n  text-transform: uppercase;\n}\na:hover {\n  cursor: pointer;\n}\n</style>\n","<template>\n\n  <div class=\"yodaspeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'translator'\">Derek's Translator</router-link><br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Yodaspeak\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Yodaspeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"yoda\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"May The Force Be With You\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.yodaspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>\n","<template>\n  <div class=\"dothrakispeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Dothraki\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Dothrakispeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"dothraki\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Have you seen my horse?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.dothrakispeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"piratespeak\">\n\n    <!-- <p> -->\n      <!-- <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Pirate Speak\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Piratespeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"pirate\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Why is the rum gone?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.piratespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"shakespearespeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'translator'\">Translator</router-link><br> -->\n      <!-- <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>Type your text below to convert to Shakespeare\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Shakespearespeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"shakespeare\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"To be or not to be!\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.shakespearespeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"vulcanspeak\">\n\n    <!-- <p>\n      <router-link v-bind:to=\"'/'\">Translator</router-link><br>\n      <router-link v-bind:to=\"'translator'\">Derek's Translator</router-link><br>\n      <router-link v-bind:to=\"'yodaspeak'\">Yoda Speak</router-link><br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link><br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link><br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link><br>\n      <router-link v-bind:to=\"'/'\">Vulcan Speak</router-link><br>-->\n    <!-- </p> -->\n    \n    <form v-on:submit.prevent=\"translate\">\n      <p>\n        Type your text below to convert to Vulcan\n        <input type=\"text\" v-model=\"text\">\n        <button type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"Vulcanspeak\",\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      translation: \"vulcan\",\n      results: null,\n      errors: []\n    };\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Live long and prosper\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.vulcanspeak {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"speaker\">\n    <h2>Let's talk like {{translation}}</h2>\n    <p>\n      <!-- <router-link v-bind:to=\"'translator'\">Translator</router-link> -->\n      <!-- <br>\n      <router-link v-bind:to=\"'/'\">Yoda Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'dothrakispeak'\">Dothraki Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'piratespeak'\">Pirate Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'shakespearespeak'\">Shakespeare Speak</router-link>\n      <br>\n      <router-link v-bind:to=\"'vulcanspeak'\">Vulcan Speak</router-link>\n      <br> -->\n    </p>\n\n    <form v-on:submit.prevent=\"translate\">\n      <p>\n        Type your text below to convert to {{translation}}\n        <input type=\"text\" v-model=\"text\">\n        <button class=\"btn btn-primary\" type=\"submit\">Translate</button>\n      </p>\n    </form>\n\n    <div v-if=\"results && results.contents\">\n      <p>{{results.contents.translated}}</p>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nrequire('vue2-animate/dist/vue2-animate.min.css');\n\nexport default {\n  name: \"speaker\",\n\n  props: [\"translator\"],\n  data() {\n    return {\n      translated: \"\",\n      text: \"\",\n      results: null,\n      errors: [],\n      translation: null,\n      images: {\n          yoda: 'yoda.jpg'\n      }\n    };\n  },\n\n  created: function() {\n    this.translation = this.$route.params.translator;\n  },\n\n  methods: {\n    translate: function() {\n      console.log(\"Who am I speaking with?\");\n      axios\n        .get(\n          `https://api.funtranslations.com/translate/${this.translation}.json`,\n          {\n            params: {\n              text: this.text\n            }\n          }\n        )\n        .then(response => {\n          this.results = response.data;\n          console.log(this.results);\n        })\n        .catch(error => {\n          this.errors.push(error);\n        });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.speaker {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"] {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.7);\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"container\">\n    <h1>About Me</h1>\n    <p>I'm a currently a senior business analyst at Boeing and am looking to enter into a web development role.\n      I have worked at Boeing for over 6 years and always visualized becoming part of the tech industry growing in my hometown of Seattle.</p>\n      <p>I recently completed a web development certificate program at Seattle University and learned many front-end technologies and skills such as HTML, CSS, JavaScript, Bootstrap and Vue.js among others.<br></p>\n      <p>My prior work experience allows me to understand office dynamics while still effectively working in teams to complete projects on time and increasing the efficiency of standard processes.</p><br>\n      <p><a href=\"https://derekbenak.com/\" target=\"_blank\">My Portfolio</a></p>\n      <p><a href=\"https://github.com/DerekJB1987\" target=\"_blank\">My Github Account</a></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"about-me\"\n};\n</script>\n\n<style scoped>\nh1,{\n  font-weight: normal;\n}\np {\n  font-size: 16px;\n  text-align: center;\n  display: block\n}\n</style>\n\n\n\n","<template>\n  <div class=\"container\">\n      <h1>About Project</h1>\n      <p>\nThis project is intended to be a featured item in my wed development portfolio.\nI used Vue.js to create a webapp that incorporates HTML, CSS and JavaScript to import data from a third party API.\nThis API is attributed to Fun Translations located at <a href=\"https://funtranslations.com/#\">Fun Translations API</a></p>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'about-project',\n};\n</script>\n\n<style scoped>\nh1, {\n  font-weight: normal;\n}\np {\n  font-size: 16px;\n  text-align: center;\n  display: block\n}\n</style>"]}